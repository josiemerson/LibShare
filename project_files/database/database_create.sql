-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema libshare
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `libshare` ;

-- -----------------------------------------------------
-- Schema libshare
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `libshare` DEFAULT CHARACTER SET utf8 ;
USE `libshare` ;


CREATE database LIBSHARE;
use libshare;

create table usuario (
CODUSU BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT
,EMAIL VARCHAR(120)  not null
,SENHA VARCHAR(80) not null
)

CREATE TABLE PERFIL(
  CODUSU BIGINT NOT NULL,
  ATIVO varchar(1) NOT NULL DEFAULT 'S',
  NOME varchar(120) NOT NULL,
  SOBRENOME varchar(120) NOT NULL,
  PATHFOTO longtext,
  ENDERECO varchar(255) NOT NULL,
  BAIRRO varchar(50) NOT NULL,
  CIDADE varchar(50) NOT NULL,
  ESTADO varchar(2) NOT NULL,
  PAIS varchar(50) NOT NULL,
  DTNASCIMENTO date NOT NULL,
  NRO int(11) NOT NULL,
  COMPLEMENTO varchar(120) DEFAULT NULL,
  TELEFONE varchar(16) NOT NULL,
  CEP VARCHAR(10), -- deve ser obrigatório
  FOREIGN KEY (CODUSU) REFERENCES USUARIO(CODUSU)
);

--CREATE TABLE PERFIL(
--  CODUSU BIGINT primary key NOT NULL,
--  ATIVO varchar(1) NOT NULL DEFAULT 'S',
--  NOME varchar(120) NOT NULL,
--  SOBRENOME varchar(120), -- deve ser obrigatório
--  PATHFOTO longtext,
--  ENDERECO varchar(255), -- deve ser obrigatório,
--  BAIRRO varchar(50), -- deve ser obrigatório,
--  CIDADE varchar(50), -- deve ser obrigatório,
--  ESTADO varchar(2), -- deve ser obrigatório,
--  PAIS varchar(50), -- deve ser obrigatório,
--  DTNASCIMENTO date , -- deve ser obrigatório,
--  NRO int(11), -- deve ser obrigatório,
--  COMPLEMENTO varchar(120), -- deve ser obrigatório,
--  TELEFONE varchar(16), -- deve ser obrigatório,
--  CEP VARCHAR(10), -- deve ser obrigatório
--  FOREIGN KEY (CODUSU) REFERENCES USUARIO(CODUSU)
--);

CREATE TABLE LIVRO(
CODLIVRO BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT
,NOME VARCHAR(50) NOT NULL
,AUTOR VARCHAR(50) NOT NULL
,EDITORA VARCHAR(50) NOT NULL
,PATHFOTO LONGTEXT NOT NULL
,DESCRICAO LONGTEXT
,ANOLANCAMENTO DATE
,DONOLIVRO BIGINT NOT NULL
,STATUSLIVRO CHAR(1) NOT NULL -- A:Alugado D:Disponível  E:Emprestado V:Vendido
,FOREIGN KEY (DONOLIVRO) REFERENCES USUARIO(CODUSU)
);

CREATE TABLE COMPARTILHAMENTO(
CODCOMP BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT
,CODUSUORIGEM BIGINT
,CODUSUDESTINO BIGINT
,DHCOMP DATETIME
,TIPOCOMP CHAR(1) -- A:Alugado E:Empresatado V:Vendido
,DTLIMITE DATE
,VLRCOMP FLOAT
,DTDEVOL DATE
,FOREIGN KEY (CODUSUDESTINO) REFERENCES USUARIO(CODUSU)
,FOREIGN KEY (CODUSUORIGEM) REFERENCES USUARIO(CODUSU)
);

CREATE TABLE ITEMCOMPARTILHAMENTO(
CODCOMP BIGINT NOT NULL ,
CODITEMCOMP INT NOT NULL,
VLRITEMCOMP FLOAT,
TIPOCOMP CHAR(1),
DHCOMP DATETIME,
DTDEVOL DATE,
CODLIVRO BIGINT,
OBSERVACAO LONGTEXT,
UNIQUE KEY (CODCOMP, CODITEMCOMP),
FOREIGN KEY (CODLIVRO) REFERENCES LIVRO(CODLIVRO),
FOREIGN KEY (CODCOMP) REFERENCES COMPARTILHAMENTO(CODCOMP)
);

CREATE TABLE AMIGOS(
MEUCODUSU BIGINT 
,CODUSUAMIGO BIGINT
,PRIMARY KEY (`MEUCODUSU`, `CODUSUAMIGO`)
,FOREIGN KEY (MEUCODUSU) REFERENCES USUARIO(CODUSU)
,FOREIGN KEY (CODUSUAMIGO) REFERENCES USUARIO(CODUSU)
);


CREATE TABLE FAVORITOS(
CODFAVORITO BIGINT PRIMARY KEY NOT NULL AUTO_INCREMENT
,CODLIVRO BIGINT NOT NULL
,CODUSU BIGINT NOT NULL
,FOREIGN KEY (CODLIVRO) REFERENCES LIVRO(CODLIVRO)
,FOREIGN KEY (CODUSU) REFERENCES USUARIO(CODUSU)
);

/*
DROP TABLE FAVORITOS;
DROP TABLE AMIGOS;
DROP TABLE COMPARTILHAMENTO;
DROP TABLE LIVRO;
DROP TABLE USUARIO;
drop database libshare;
*/

-------------------------------------------------------
-- Table `libshare`.`permissao`
-------------------------------------------------------

CREATE TABLE IF NOT EXISTS permissao (
  `CODPERMISSAO` INT NOT NULL AUTO_INCREMENT,
  `PAPEL` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`CODPERMISSAO`),
  UNIQUE INDEX `PAPEL_UNIQUE` (`PAPEL` ASC))

-- -----------------------------------------------------
-- Table `libshare`.`usuario_permissao`
-- -----------------------------------------------------

  CREATE TABLE IF NOT EXISTS usuario_permissao (
  CODPERMISSAO INT NOT NULL,
  CODUSU BIGINT NOT NULL,
  PRIMARY KEY (CODPERMISSAO, CODUSU),
  INDEX fk_usuario_permissao_has_usuario_idx (CODUSU ASC),
  INDEX fk_usuario_permissao_has_permissao_idx (CODPERMISSAO ASC),
  CONSTRAINT fk_usuario_permissao_has_permissao
    FOREIGN KEY (CODPERMISSAO)
    REFERENCES permissao (CODPERMISSAO)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_usuario_permissao_has_usuario
    FOREIGN KEY (CODUSU)
    REFERENCES usuario (CODUSU)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE USUARIO_LIVRO (
  CODUSU BIGINT(20) NOT NULL,
  CODLIVRO BIGINT(20) NOT NULL,
  PRIMARY KEY (CODUSU, CODLIVRO),
  KEY FK_USUARIO_LIVRO_HAS_USUARIO_IDX (CODUSU),
  KEY FK_USUARIO_LIVRO_HAS_CODLIVRO_IDX (CODLIVRO),
  CONSTRAINT FK_USUARIO_LIVRO_HAS_CODLIVRO FOREIGN KEY (CODLIVRO) REFERENCES LIVRO (CODLIVRO) ON DELETE NO ACTION ON UPDATE NO ACTION,
  CONSTRAINT FK_USUARIO_LIVRO_HAS_USUARIO FOREIGN KEY (CODUSU) REFERENCES USUARIO (CODUSU) ON DELETE NO ACTION ON UPDATE NO ACTION
) ENGINE=INNODB DEFAULT CHARSET=LATIN1

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `mutrack_simple`.`tb_permission`
-- -----------------------------------------------------
START TRANSACTION;
USE `libshare`;
INSERT INTO `libshare`.`permissao` (`CODPERMISSAO`, `PAPEL`) VALUES (1, 'ROLE_ADMIN');
INSERT INTO `libshare`.`permissao` (`CODPERMISSAO`, `PAPEL`) VALUES (2, 'ROLE_USER');

COMMIT;

